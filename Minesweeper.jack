class Minesweeper {
	field Random mRand;
	field GameField mField;
	field MainMenu mMainMenu;
	field NewGameMenu mNewGameMenu;
	field char lastKey;

	constructor Minesweeper new() {
		let lastKey = 0;
		let mRand = Random.new(3);
		let mMainMenu = MainMenu.new();
		let mNewGameMenu = NewGameMenu.new();
		return this;
	}

	method void dispose() {
		do mField.dispose();
		do mRand.dispose();
		do mMainMenu.dispose();
		do mNewGameMenu.dispose();

		do Memory.deAlloc(this);

		return;
	}

	method void run() {
		var char key;
		var boolean continue;
		var int transition;
		var int seed;
		var int mines;

		let mines = 30;

		let transition = mMainMenu.run();

		if (transition = MainMenu.newGame()) {
			let mines = mNewGameMenu.run();
		}

		do TextRenderer.loadScreen();

		let seed = mMainMenu.getCounterValue();
		do mRand.seed(seed);

		let mField = GameField.new(mRand, mines);
		do mField.draw();

		while (true) {
			let key = Keyboard.keyPressed();

			if (~(key = lastKey)) {
				let lastKey = key;

				if (~(key = 0)) {
					if (key = 81) {
						return;
					}

					if (key = 32) {
						let continue = mField.open();

						if (~continue) {
							return;
						}
					}

					if (key = 70) {
						do mField.flag();
					}

					if (key = 130) {
						do mField.left();
					}

					if (key = 131) {
						do mField.up();
					}

					if (key = 132) {
						do mField.right();
					}

					if (key = 133) {
						do mField.down();
					}
					
					if (key = 140) {
						return;
					}	

				}
			}
		}

		return;
	}
}